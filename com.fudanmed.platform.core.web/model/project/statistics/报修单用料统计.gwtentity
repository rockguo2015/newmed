package com.fudanmed.platform.core.web feature project{
	
	import edu.fudan.langlab.domain.security.*
	import edu.fudan.langlab.domain.organization.*
	import com.fudanmed.platform.core.web.*
	import com.fudanmed.platform.core.warehouse.*
	import com.fudanmed.platform.core.common.*
	import com.fudanmed.platform.core.domain.*
	
	import com.fudanmed.platform.core.web.shared.organization.*
	import com.fudanmed.platform.core.web.client.organization.*
	import com.fudanmed.platform.core.web.server.^service.organization.*
	import com.fudanmed.platform.core.web.shared.project.*
	import com.fudanmed.platform.core.web.client.project.*
	import com.fudanmed.platform.core.web.server.^service.project.*
	
	ui-entity UIWorkItemStockRecordStatisticsData for RCWorkItemStockRecordItem{
		
		team : proxy of RCMaintenanceTeam "维修班组"
		materialId : String "物品编号"
		name : String "物品名称"
		typeDesc : String "规格型号"
		unit : proxy of RCProduceSpecificationUnit "计量单位"
		price : Double	"单价"
		quantity : Integer "数量"
		amount : Double "金额"
		reportOrg : proxy of RCOrganization "报修科室"
		date : Date "领料时间"
		reportSid : String "报修单号"
		workItemSid : String "工单编号"
		inoutStockSid : String "领退料单号"
		
		map WorkItemStockRecordStatisticsDataMapper{
			direct{
				{team,entity.record.workItem.groupTask.team} readonly,
				{materialId,entity.recordItem.productEntry.productSpec.materialId} readonly,
				{name,entity.recordItem.productEntry.productSpec.name} readonly,
				{typeDesc,entity.recordItem.productEntry.productSpec.typeDesc} readonly,
				{unit,entity.recordItem.productEntry.productSpec.unit} readonly,
				{price,entity.recordItem.productEntry.price} readonly,
				{quantity,entity.recordItem.quantity} readonly,
				{amount,entity.recordItem.totalAmount} readonly,
				{reportOrg,entity.record.workItem.groupTask.repairTask.reportOrg} readonly,
				{date,entity.record.date} readonly,
				{reportSid,entity.record.workItem.groupTask.repairTask.reportSid} readonly,
				{workItemSid,entity.record.workItem.sid} readonly,
				{inoutStockSid,entity.record.sid} readonly
				
				
			}
		}
		csv-map WorkItemStockRecordStatisticsDataCSVMapper{
			field-list{
				team readonly,materialId readonly,name readonly,typeDesc readonly,unit readonly,price readonly,
				quantity readonly,amount readonly,
				reportOrg readonly,date readonly,reportSid readonly,workItemSid readonly,inoutStockSid readonly
			}
		}
		ui-component WorkItemStockRecordStatisticsDataListGrid as GXTGrid4LargeData{
			binding{team as DefaultColumn(160),materialId,name,typeDesc,unit as DefaultColumn(80),price as DoubleColumn(50),quantity as IntegerColumn(50),amount as DoubleColumn(50),reportOrg,date,reportSid,workItemSid,inoutStockSid}
			op initializeComponent():void{
				
				createSummaryRow=>[
					it += team.renderSummaryColumn[sb,state|
						sb.appendHtmlConstant("合计"+objects.size.toString+"条")
					]
					it += amount.renderSummaryColumn[sb,state|
						sb.appendHtmlConstant(objects.^map[it.amount].reduce[Double d1, Double d2|d1+d2].nullsafe+"元")
					]
				]
				asWidget.groupBy(team,true)
				this.amount.groupRender = [number,sb|
					sb.appendHtmlConstant(number.toString+'元')
				]
				this.team.groupRender = [number,sb|
					sb.appendHtmlConstant("小计"+number.toString+"条")
				]
				
				this.asWidget
				this.unForceFit
			}
		}
	}
	
	ui-criteria UIWorkItemStockStatisticsCriteria for RCWorkItemStockStatisticsCriteria{
		reportDateFrom : Date "领料开始"
		reportDateTo : Date "领料结束"
		team : proxy of RCMaintenanceTeam "维修班组"
		reportOrg : proxy of RCOrganization "报修科室"
		
		map WorkItemStockStatisticsCriteriaMapper{
			direct{reportDateFrom,reportDateTo,team,reportOrg}
		}
		
		ui-component WorkItemStockStatisticsCriteriaForm as GXTForm{
			binding{
				reportDateFrom,reportDateTo,
				reportOrg as ComboBoxItem content from AllOrganizationContentProvider,
				team as ComboBoxItem content from AllMaintenanceTeamContentProvider
			}
		}
	}
	
	presenter WorkItemStockStatisticListPresenter{
		view interface{
			op setResults(results : UIWorkItemStockRecordStatisticsData[*]):void
			op refresh() : void
			signal out queryRequest(c : UIWorkItemStockStatisticsCriteria)
		}
		
		interaction{
			input prepare.setup(){
				this.activate[
					done
				]
			}
			
			input call.refresh(){
				getView().refresh()
			}
			
			input view.queryRequest(c : UIWorkItemStockStatisticsCriteria){
				service.loadRepairTaskList(c,onSuccess[
					getView().setResults(it)
				])
			}
		}
		
		service{
			@Inject mapper : WorkItemStockRecordStatisticsDataMapper
			@Inject criteriaMapper : WorkItemStockStatisticsCriteriaMapper
			
			op loadRepairTaskList(uicriteria : UIWorkItemStockStatisticsCriteria) : UIWorkItemStockRecordStatisticsData[*]{
				var c = uicriteria.createPagedCriteria(typeof(RCWorkItemStockStatisticsCriteria),criteriaMapper,entities)
				c.listAndTransform[mapper.apply(it)]
			}
			
		}
	}
	
	view WorkItemStockStatisticListView for WorkItemStockStatisticListPresenter{
		con : Widget
		@Inject listGrid : WorkItemStockRecordStatisticsDataListGrid
		@Inject criteriaForm : WorkItemStockStatisticsCriteriaForm
		factory organizationOutlinePresenter : OrganizationOutlinePresenter
		required exportWorkItemStockRecordStatisticsCommand : ExportWorkItemStockRecordStatisticsCommand
		asWidget():Widget{
			con
		}
		layout{
			con=widgets.FramedPanel("报修单用料统计表")=>[
				widget = widgets.VLayout=>[
					addFill(TABLE=>[
						tr=>[
							td=>[
								it += TABLE=>[tr=>[
									td=>[
										it += criteriaForm.reportOrg.asWidget
									]
									td=>[
										it += widgets.TextButton("选择")=>[
											addSelectHandler[
												organizationOutlinePresenter.get=>[
													it.setupAsSimpleTree[
														asSelector("选择组织机构",300,500)[
															criteriaForm.reportOrg.value = it.toProxy
														].show
													]
												]
											]
										]
									]
								]
							]]
							td=>[it+=criteriaForm.team.asWidget]
						]
						tr=>[
							td=>[it+=criteriaForm.reportDateFrom.asWidget=>[criteriaForm.reportDateFrom.value = today.addMonths(-1)]]
							td=>[it+=criteriaForm.reportDateTo.asWidget=>[criteriaForm.reportDateTo.value = today]]
							td=>[it+=widgets.TextButton("筛选")[
								fire view.queryRequest(criteriaForm.value=>[it.setPageSize(5000)])
							]]
						]
					])
					add(listGrid.asWidget.withBorder,widgets.VLayoutData(1,1))
				]
				addCommand([|criteriaForm.value],exportWorkItemStockRecordStatisticsCommand)
			]
		}
		
		op setResults(results : UIWorkItemStockRecordStatisticsData[*]) :void {
			if(results.size>5000) display("警告","筛选结果多于5000条，可能未显示出全部满足条件的记录")
			listGrid.objects = results
		}
		
		op refresh():void{
			fire view.queryRequest(criteriaForm.value=>[it.setPageSize(501)])
		}
	}
	
	ui-command ExportWorkItemStockRecordStatisticsCommand for UIWorkItemStockStatisticsCriteria "用料信息导出"{
		execute{
			service.prepareExport(value,onSuccess[
				doDownload(it)
			])
		}
		service{
			@Inject mapper : WorkItemStockRecordStatisticsDataMapper
			@Inject criteriaMapper : WorkItemStockStatisticsCriteriaMapper
			op prepareExport(pagedCriteria : UIWorkItemStockStatisticsCriteria):String{
				var c = pagedCriteria.createCriteria4All(typeof(RCWorkItemStockStatisticsCriteria),criteriaMapper,entities)
				csvPrepare("WorkItemStockRecordStatistics",typeof(WorkItemStockRecordStatisticsDataCSVMapper),c.listAndTransform[mapper.apply(it)])
			}
		}
	}
}